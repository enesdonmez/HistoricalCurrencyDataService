//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FixerApiResponse", Namespace="http://schemas.datacontract.org/2004/07/HistoricalRatesService.Models")]
    public partial class FixerApiResponse : object
    {
        
        private ServiceReference1.ApiError ErrorField;
        
        private System.Collections.Generic.Dictionary<string, decimal> RatesField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference1.ApiError Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, decimal> Rates
        {
            get
            {
                return this.RatesField;
            }
            set
            {
                this.RatesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApiError", Namespace="http://schemas.datacontract.org/2004/07/HistoricalRatesService.Models")]
    public partial class ApiError : object
    {
        
        private int CodeField;
        
        private string InfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info
        {
            get
            {
                return this.InfoField;
            }
            set
            {
                this.InfoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IHistoricalRatesService")]
    public interface IHistoricalRatesService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoricalRatesService/GetExchangeRates", ReplyAction="http://tempuri.org/IHistoricalRatesService/GetExchangeRatesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.FixerApiResponse> GetExchangeRatesAsync(string Date, string Base, string[] Symbols);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHistoricalRatesService/GetSupportedCurrencies", ReplyAction="http://tempuri.org/IHistoricalRatesService/GetSupportedCurrenciesResponse")]
        System.Threading.Tasks.Task<string[]> GetSupportedCurrenciesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IHistoricalRatesServiceChannel : ServiceReference1.IHistoricalRatesService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class HistoricalRatesServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IHistoricalRatesService>, ServiceReference1.IHistoricalRatesService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HistoricalRatesServiceClient() : 
                base(HistoricalRatesServiceClient.GetDefaultBinding(), HistoricalRatesServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IHistoricalRatesService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HistoricalRatesServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(HistoricalRatesServiceClient.GetBindingForEndpoint(endpointConfiguration), HistoricalRatesServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HistoricalRatesServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HistoricalRatesServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HistoricalRatesServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HistoricalRatesServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HistoricalRatesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.FixerApiResponse> GetExchangeRatesAsync(string Date, string Base, string[] Symbols)
        {
            return base.Channel.GetExchangeRatesAsync(Date, Base, Symbols);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSupportedCurrenciesAsync()
        {
            return base.Channel.GetSupportedCurrenciesAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHistoricalRatesService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHistoricalRatesService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:56765/HistoricalRatesService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return HistoricalRatesServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IHistoricalRatesService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return HistoricalRatesServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IHistoricalRatesService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IHistoricalRatesService,
        }
    }
}
